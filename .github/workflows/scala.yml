name: Scala CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: 'Create env file'
        run: |
          touch .env
          echo JDBC_DB_URL="" >> .env
          echo DATABASE_USERNAME="" >> .env
          echo DATABASE_PASSWORD="" >> .env
          echo JDBC_TEST_URL="" >> .env
          cat .env

      # Run App Test
      - name: Run tests
        run: sbt coverage test
      - name: Coverage Report
        run: sbt coverageReport coverageAggregate
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      # Run Core
      - name: Run Core tests
        run: sbt "project exle-core" coverage test
      - name: Coverage Report
        run: sbt "project exle-core" coverageReport coverageAggregate
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      # Run Common
      - name: Run Common tests
        run: sbt "project exle-common" coverage test
      - name: Coverage Report
        run: sbt "project exle-common" coverageReport coverageAggregate
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true

      # Run Chain
      - name: Run Chain tests
        run: sbt "project exle-chain" coverage test
      - name: Coverage Report
        run: sbt "project exle-chain" coverageReport coverageAggregate
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      # Format App Check
      - name: Formatting App
        run: sbt scalafmtSbtCheck scalafmtCheck test:scalafmtCheck
      # Format core Check
      - name: Formatting App
        run: sbt "project exle-core" scalafmtSbtCheck scalafmtCheck test:scalafmtCheck
      # Format common Check
      - name: Formatting App
        run: sbt "project exle-common" scalafmtSbtCheck scalafmtCheck test:scalafmtCheck
      # Format chain Check
      - name: Formatting App
        run: sbt "project exle-chain" scalafmtSbtCheck scalafmtCheck test:scalafmtCheck

permissions:
  contents: read
